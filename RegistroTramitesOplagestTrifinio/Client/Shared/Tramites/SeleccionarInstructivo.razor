<div class="form-group mb-4">
    <label for="instructivos" class="form-label">Nombre del instructivo</label>
    <BSInput InputType="InputType.Select" TValue="int?" ValueChanged="@(async (int? value) => { Tramite.InstructivoId = value; await ObtenerRequisitos(value); })" ValueExpression="@(() => Tramite.InstructivoId)" Value="Tramite.InstructivoId" id="instructivos" class="form-select">
        @if (Instructivos == null)
        {
            <option value="null">Cargando...</option>
        }
        else if (Instructivos.Count == 0)
        {
            <option value="null">No hay instructivos para mostrar</option>
        }
        else
        {
            <option value="0">-- Seleccionar --</option>

            @foreach (var instructivo in Instructivos)
            {
                <option value="@instructivo.InstructivoId">@instructivo.Nombre</option>
            }
        }
    </BSInput>
    <BSFeedback For="@(() => Tramite.InstructivoId)" />
</div>

@code 
{
    [Parameter]
    public FormularioTramiteDTO? Tramite { get; set; }

    [Parameter]
    public List<InstructivoDTO>? Instructivos { get; set; }

    [Parameter]
    public EventCallback<int?> EventCallback { get; set; }

    private async Task ObtenerRequisitos(int? instructivoId)
    {
        await EventCallback.InvokeAsync(instructivoId);
    }
}
