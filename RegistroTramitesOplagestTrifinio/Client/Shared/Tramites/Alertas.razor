<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
    </symbol>
</svg>

@if (_alertas is not 0)
{
    <h4>Alertas</h4>
    <div class="row">
        @if (_tramitesPorAgendar is not 0)
        {
            <div class="col-4">
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    <div class="d-flex flex-row">
                        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                        <h4 class="alert-heading">Alerta de 2 d&iacute;as</h4>
                    </div>
                    <p>Hay <b>@_tramitesPorAgendar</b> tr&aacute;mites a los que se le deben agendadar la visita t&eacute;cnica.</p>
                    <hr>
                    <p>Expedientes de los tr&aacute;mites</p>
                    <ul>
                        @foreach (var expediente in _expedientesTramitesPorAgendar)
                        {
                            <li>@expediente</li>
                        }
                    </ul>
                </div>
            </div>
        }
        @if (_tramitesPorVisitar is not 0)
        {
            <div class="col-4">
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    <div class="d-flex flex-row">
                        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                        <h4 class="alert-heading">Alerta de 2 d&iacute;as</h4>
                    </div>
                    <p>Hay <b>@_tramitesPorVisitar</b> tr&aacute;mites a los que se le deben realizar la visita t&eacute;cnica.</p>
                    <hr>
                    <p>Expedientes de los tr&aacute;mites</p>
                    <ul>
                        @foreach (var expediente in _expedientesTramitesPorVisitar)
                        {
                            <li>@expediente</li>
                        }
                    </ul>
                </div>
            </div>
        }
        @if (_tramitesPorFirmar is not 0)
        {
            <div class="col-4">
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    <div class="d-flex flex-row">
                        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                        <h4 class="alert-heading">Alerta de 2 d&iacute;as</h4>
                    </div>
                    <p>Hay <b>@_tramitesPorFirmar</b> tr&aacute;mites que deben ser enviados a firmar.</p>
                    <hr>
                    <p>Expedientes de los tr&aacute;mites</p>
                    <ul>
                        @foreach (var expediente in _expedientesTramitesPorFirmar)
                        {
                            <li>@expediente</li>
                        }
                    </ul>
                </div>
            </div>
        }
    </div>
}

@code
{
    [Parameter]
    public List<TramiteListaDTO>? Tramites { get; set; }

    private int _tramitesPorAgendar = 0;
    private List<string> _expedientesTramitesPorAgendar = new();
    private int _tramitesPorVisitar = 0;
    private List<string> _expedientesTramitesPorVisitar = new();
    private int _tramitesPorFirmar = 0;
    private List<string> _expedientesTramitesPorFirmar = new();

    private int _alertas = 0;

    protected override void OnParametersSet()
    {
        CalcularTramitesPorAgendar(Tramites);
    }

    private void CalcularTramitesPorAgendar(List<TramiteListaDTO> tramites)
    {
        var cantidad = 0;


    }

    private int CalcularDiferenciaEntreFechas(DateOnly fecha)
    {
        
    }
}
