@inject IPeticionesHttp Http
@inject IMostrarMensaje Mensaje
@inject NavigationManager Navigation

<EditForm Model="Tramite" OnValidSubmit="OnDataAnnotationsValidated">
    <DataAnnotationsValidator />
    @if (Tramite.Estado == string.Empty)
    {
        <button type="submit" class="btn btn-success mb-3">Guardar</button>
    }
    else if (Tramite.Estado == "Nuevo")
    {
        <BSButton Target="AgendarModal" Margin="Margins.None" Color="BSColor.Primary" >Agendar visita t&eacute;cnica</BSButton>
        <BSButton Target="AgendarModal" Margin="Margins.None" Color="BSColor.Secondary" @onclick="@(() => Devolver())">Devolver</BSButton>
        <div class="col-sm-12 mb-3">
            <div class="form-group">
                <label for="nombre" class="form-label">Nombre del tr&aacute;mite</label>
                <InputText @bind-Value="@Tramite.Instructivo" id="nombre" class="form-control"></InputText>
                <ValidationMessage For="@(() => Tramite.Instructivo)" />
            </div>
        </div>
    }
    <div class="row mb-3">
        <div class="col-sm-4">
            <div class="form-group">
                <label for="propietario" class="form-label">Propietario</label>
                <InputText @bind-Value="@Tramite.Propietario" id="propietario" placeholder="Ingrese el nombre del propietario" class="form-control"></InputText>
                <ValidationMessage For="@(() => Tramite.Propietario)" />
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <label for="proyecto" class="form-label">Proyecto</label>
                <InputText @bind-Value="@Tramite.Proyecto" id="proyecto" placeholder="Ingrese el nombre del proyecto" class="form-control"></InputText>
                <ValidationMessage For="@(() => Tramite.Proyecto)" />
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <label for="telefono" class="form-label">Tel&eacute;fono</label>
                <InputText @bind-Value="@Tramite.Telefono" id="telefono" placeholder="Ingrese el n&uacute;mero de tel&eacute;fono" class="form-control"></InputText>
                <ValidationMessage For="@(() => Tramite.Telefono)" />
            </div>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-sm-4">
            <div class="form-group">
                <label for="direccion" class="form-label">Direcci&oacute;n</label>
                <InputText @bind-Value="@Tramite.Direccion" id="direccion" placeholder="Ingrese la direcci&oacute;n" class="form-control"></InputText>
                <ValidationMessage For="@(() => Tramite.Direccion)" />
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <label for="departamentos" class="form-label">Departamento</label>
                <InputSelect @bind-Value="Tramite.Departamento" id="departamentos" class="form-select">
                    <option>-- Seleccionar --</option>
                    <option>Santa Ana</option>
                </InputSelect>
                <ValidationMessage For="@(() => Tramite.Departamento)" />
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <label for="municipios" class="form-label">Municipio</label>
                <InputSelect @bind-Value="Tramite.Municipio" id="municipios" class="form-select">
                    <option>-- Seleccionar --</option>
                    <option>Chalchuapa</option>
                </InputSelect>
                <ValidationMessage For="@(() => Tramite.Municipio)" />
            </div>
        </div>
    </div>
</EditForm>
<BSModal IsCentered="true" DataId="AgendarModal">
    <BSForm Model="Visita" OnValidSubmit="Agendar">
        <DataAnnotationsValidator />
        <BSModalHeader>Agendar visita t&eacute;cnica</BSModalHeader>
        <BSModalContent>
            <div class="input-group mb-4">
                <span class="input-group-text">Fecha</span>
                <BSInput InputType="InputType.Date" @bind-Value="Visita.Fecha" />
            </div>
            <div class="input-group mb-4">
                <span class="input-group-text">Hora</span>
                <BSInput InputType="InputType.Time" @bind-Value="Visita.Hora" />
            </div>
            <div class="mb-3">
                <BSLabel>Encargado</BSLabel>
                <BSInput InputType="InputType.Text" placeholder="Ingrese el nombre del encargado" @bind-Value="Visita.Encargado" />
            </div>
            <div class="mb-3">
                <BSLabel>Comentarios</BSLabel>
                <BSInput InputType="InputType.TextArea" placeholder="Ingrese los comentarios (opcional)" @bind-Value="Visita.Comentarios" />
            </div>
        </BSModalContent>
        <BSModalFooter Context="modal">
            <BSButton @onclick="@(() => Agendar())" IsSubmit="true" Color="BSColor.Primary">Agendar</BSButton>
        </BSModalFooter>
    </BSForm>
</BSModal>


@code {
    [Parameter] public TramiteDTO? Tramite { get; set; } = new();
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private string _departamentoSeleccionado = string.Empty;
    private string _municipioSeleccionado = string.Empty;
    private VisitaDTO Visita { get; set; } = new();

    private async Task OnDataAnnotationsValidated()
    {
        await OnValidSubmit.InvokeAsync();
    }

    private async Task Agendar()
    {
        Visita.TramiteId = Tramite.TramiteId;
        Visita.Estado = "Sin realizar";

        var respuesta = await Http.Post<VisitaDTO>("api/tramites/agendar", Visita);

        if (respuesta.Error)
        {
            await Mensaje.Error(await respuesta.ObtenerMensaje());
        }
        else
        {
            await Mensaje.Completado("La visita técnica fue creada con éxito");
            Navigation.NavigateTo("tramites/agendados");
        }
    }

    private async Task Devolver()
    {

    }
}