@page "/visitas/editar/{VisitaId:int}"

@inject IPeticionesHttp Http
@inject IMostrarMensaje Mensaje
@inject NavigationManager Navigation
@inject IGeneraRegistroActividad Registro

@attribute [Authorize]

<div class="p-4">
    @if (Visita == null)
    {
        <div class="d-flex align-items-center">
            <img src="images/progress.gif" width="35" />
            <p class="m-0">No hay informaci&oacute;n disponible</p>
        </div>
    }
    else
    {
        <AgendarCita Visita="Visita" OnValidSubmit="Editar" />
    }
</div>

@code
{
    [Parameter]
    public int? VisitaId { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState>? Authentication { get; set; }

    private string _responsableEmail = string.Empty;

    private VisitaDTO? Visita { get; set; } = new();

    private async Task Editar()
    {
        await Mensaje.Completado("La información de la visita fue modificada con éxito.");
        Navigation.NavigateTo("agenda-de-visitas");
    }

    protected override async Task OnInitializedAsync()
    {
        Visita = new()
            {
                Comentarios = "Comentarios",
                Encargado = "Encargado",
                Estado = "Sin realizar",
                Fecha = DateOnly.FromDateTime(DateTime.UtcNow),
                Hora = TimeOnly.FromDateTime(DateTime.UtcNow),
                TramiteExpediente = string.Empty,
                TramiteId = 0,
                VisitaId = 0
            };
    }
}
