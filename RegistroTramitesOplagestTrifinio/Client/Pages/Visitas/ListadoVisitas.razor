@page "/agenda-de-visitas"

@inject IPeticionesHttp Http
@inject IMostrarMensaje Mensajes

@attribute [Authorize]

<div class="p-4">
    @if (Visitas.Count == 0 || Visitas == null)
    {
        <div class="d-flex align-items-center">
            <img src="images/progress.gif" width="35" />
            <p class="m-0">No hay visitas disponibles</p>
        </div>
    }
    else
    {
        <h1 class="mb-3">Lista de visitas t&eacute;cnicas</h1>

        <ListaVisitas Visitas="Visitas" />

        <Paginacion Actual="_Actual" Total="_Total" Seleccion="Seleccionar" />
    }
</div>

@code
{
    private List<VisitaDTO>? Visitas { get; set; } = new();
    private int _correlativo = 0;
    private int _Actual { get; set; } = 1;
    private int _Total { get; set; }

    private async Task Seleccionar(int pagina)
    {
        _Actual = pagina;
        await CargarListado(pagina);
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarListado();
    }

    private async Task CargarListado(int pagina = 1)
    {
        var cantidad = 1;
        _Total = 1;

        Visitas.Add(new VisitaDTO()
            {
                Comentarios = "Comentarios",
                Encargado = "Encargado",
                Estado = "Sin realizar",
                Fecha = DateOnly.FromDateTime(DateTime.UtcNow),
                Hora = TimeOnly.FromDateTime(DateTime.UtcNow),
                TramiteExpediente = string.Empty,
                TramiteId = 0,
                VisitaId = 0
            });
    }
}
