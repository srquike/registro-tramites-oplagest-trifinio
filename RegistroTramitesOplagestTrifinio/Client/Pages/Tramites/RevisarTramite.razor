@page "/tramites/revisar/{TramiteId:int}"
@inject IPeticionesHttp Http
@inject IMostrarMensaje Mensaje
@inject NavigationManager Navigation

<h1 class="display-4">Revisar nuevo tr&aacute;mite</h1>

<FormularioTramite Tramite="Tramite" OnValidSubmit="Revisar" />

<RequisitosCheckBoxes Requisitos="Requisitos" />

@code
{
    [Parameter] public int? TramiteId { get; set; }
    public FormularioTramiteDTO Tramite { get; set; } = new();
    public List<TramiteRequisitoDTO> Requisitos { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var respuesta = await Http.Get<FormularioTramiteDTO>($"api/tramites/{TramiteId}");

        if (respuesta.Error)
        {
            await Mensaje.Error(await respuesta.ObtenerMensaje());
        }
        else
        {
            Tramite = respuesta.Respuesta;
            Requisitos = Tramite.TramitesRequisitos.Select(x => new TramiteRequisitoDTO()
                {
                    Nombre = x.Nombre,
                    RequistoId = x.RequistoId,
                    Entregado = x.Entregado,
                    Categoria = x.Categoria

                }).OrderBy(r => r.Categoria).ToList();
        }
    }

    public async Task Revisar()
    {
        var respuesta = await Http.Put<FormularioTramiteDTO>($"api/tramites/{TramiteId}", Tramite!);

        if (respuesta.Error)
        {
            await Mensaje.Error(await respuesta.ObtenerMensaje());
        }
        else
        {
            Navigation.NavigateTo("tramites/nuevos");
        }
    }
}
