@page "/tramites/editar/{TramiteId:int}"

@inject IPeticionesHttp Http
@inject IMostrarMensaje Mensaje
@inject NavigationManager Navigation
@inject IGeneraRegistroActividad Registro

@attribute [Authorize]

<div class="p-4">
    <h1 class="mb-4">Modificar datos del tr&aacute;mite</h1>

    @if (Tramite is null)
    {
        <div class="d-flex align-items-center">
            <img src="images/progress.gif" width="35" />
            <p class="m-0">Cargando datos del tr&aacute;mite, por favor espere...</p>
        </div>
    }
    else if (Tramite.TramiteId is not 0)
    {
        <div class="d-flex align-items-center">
            <img src="images/progress.gif" width="35" />
            <p class="m-0">No hay datos disponibles para mostrar</p>
        </div>
    }
    else
    {
        <FormularioTramite Tramite="Tramite" OnValidSubmit="Editar">
            <Opciones>
                <BSButton IsSubmit="true" Color="BSColor.Success" IsOutlined="true">Guardar cambios</BSButton>
            </Opciones>
        </FormularioTramite>

        <RequisitosCheckBoxes Requisitos="TramitesRequisitos" />
    }
</div>

@code
{
    [Parameter]
    public int? TramiteId { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Redireccion { get; set; }

    private FormularioTramiteDTO? Tramite { get; set; }
    private List<TramiteRequisitoDTO>? TramitesRequisitos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Tramite = new()
            {
                CorreoElectronicoReceptor = string.Empty,
                Estado = "Nuevo",
                Expediente = "EXP-DEMO-1",
                FechaEgreso = DateOnly.FromDateTime(DateTime.UtcNow),
                FechaIngreso = DateOnly.FromDateTime(DateTime.UtcNow),
                InmuebleId = 0,
                InstructivoId = 0,
                MontoPagado = 445.2,
                Receptor = string.Empty,
                TramiteId = 0
            };

            await ObtenerRequisitos(0);
    }

    private async Task ObtenerRequisitos(int tramiteId)
    {
        TramitesRequisitos = new();
        TramitesRequisitos.Add(new TramiteRequisitoDTO()
            {
                Entregado = false,
                Nombre = "Requisito DEMO 1",
                RequisitoId = 0,
                TramiteId = 0,
                TramiteRequisitoId = 0
            });
    }

    private async Task EditarRequisitos()
    {
    }

    private async Task Editar()
    {
        await Mensaje.Completado("Los datos del trámite fuerón modificados con éxito");
        Navigation.NavigateTo(Redireccion);
    }
}
