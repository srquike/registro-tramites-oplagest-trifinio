@page "/tramites/agendados/revisar/{TramiteId:int}"
@inject IPeticionesHttp Http
@inject IMostrarMensaje Mensaje
@inject NavigationManager Navigation

<div class="p-4">
    <h1 class="mb-4">Revisi&oacute;n de tr&aacute;mite </h1>

    <div class="mb-4 btn-group" aria-label="group">
        <BSButton Target="CompletarVisitaModal" Class="btn btn-outline-primary">Completar visita t&eacute;cnica</BSButton>
        <BSButton Target="CompletarVisitaModal" OnClick="EnviarAFirmar" Class="btn btn-outline-primary">Enviar a firmar</BSButton>
        <a href="/tramites/editar/@TramiteId" class="btn btn-outline-primary">Editar</a>
        <BSButton Target="DevolverModal" Class="btn btn-outline-primary">Devolver</BSButton>
    </div>

    <VerTramite Tramite="Tramite" @key="Tramite.TramiteId"/>

    <BSModal IsCentered="true" DataId="DevolverModal">
        <DevolverTramite Devolucion="Devolucion" OnValidSubmit="Devolver" />
    </BSModal>
    
    <BSModal IsCentered="true" DataId="CompletarVisitaModal">
        <CompletarVisitaTecnica VisitaId="VisitaId" />
    </BSModal>
</div>

@code 
{
    [Parameter] 
    public int? TramiteId { get; set; }

    public TramiteDTO Tramite { get; set; } = new();
    public DevolucionDTO Devolucion { get; set; } = new();
    public int? VisitaId { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var peticion = await Http.Get<TramiteDTO>($"api/tramites/{TramiteId}");

        if (peticion.Error)
        {
            await Mensaje.Error("No fue posible obtener los datos del trámite");
        }
        else
        {
            Tramite = peticion.Respuesta;
        }
    }

    private async Task Devolver()
    {
        Devolucion.TramiteId = Tramite.TramiteId;

        var peticion = await Http.Post<DevolucionDTO>($"api/tramites/devolver", Devolucion);

        if (peticion.Error)
        {
            await Mensaje.Error("No fue posible devolver el trámite");
        }
        else
        {
            await Mensaje.Completado("El trámite fue devuelto con éxito");
            Navigation.NavigateTo("tramites/devueltos");
        }
    }

    private async Task EnviarAFirmar()
    {
        // To do
    }
}